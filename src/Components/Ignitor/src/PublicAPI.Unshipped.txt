#nullable enable
Ignitor.ArrayBuilderSegment<T>
Ignitor.ArrayBuilderSegment<T>.Array.get -> T[]!
Ignitor.ArrayBuilderSegment<T>.Count.get -> int
Ignitor.ArrayBuilderSegment<T>.Offset.get -> int
Ignitor.ArrayBuilderSegment<T>.this[int index].get -> T
Ignitor.ArrayRange<T>
Ignitor.ArrayRange<T>.Clone() -> Ignitor.ArrayRange<T>
Ignitor.BlazorClient
Ignitor.BlazorClient.BlazorClient() -> void
Ignitor.BlazorClient.Cancel() -> void
Ignitor.BlazorClient.CaptureOperations.get -> bool
Ignitor.BlazorClient.CaptureOperations.set -> void
Ignitor.BlazorClient.CircuitId.get -> string?
Ignitor.BlazorClient.ClickAsync(string! elementId, bool expectRenderBatch = true) -> System.Threading.Tasks.Task!
Ignitor.BlazorClient.ConfirmBatch(int batchId, string? error = null) -> System.Threading.Tasks.Task!
Ignitor.BlazorClient.ConfirmRenderBatch.get -> bool
Ignitor.BlazorClient.ConfirmRenderBatch.set -> void
Ignitor.BlazorClient.ConnectAsync(System.Uri! uri, bool connectAutomatically = true, System.Action<Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilder!, System.Uri!>? configure = null) -> System.Threading.Tasks.Task<bool>!
Ignitor.BlazorClient.DefaultConnectionTimeout.get -> System.TimeSpan?
Ignitor.BlazorClient.DefaultConnectionTimeout.set -> void
Ignitor.BlazorClient.DefaultOperationTimeout.get -> System.TimeSpan?
Ignitor.BlazorClient.DefaultOperationTimeout.set -> void
Ignitor.BlazorClient.DisposeAsync() -> System.Threading.Tasks.ValueTask
Ignitor.BlazorClient.DotNetInteropCompletion -> System.Action<string!>?
Ignitor.BlazorClient.ExpectCircuitError(System.Func<System.Threading.Tasks.Task!>! action, System.TimeSpan? timeout = null) -> System.Threading.Tasks.Task<string?>!
Ignitor.BlazorClient.ExpectCircuitErrorAndDisconnect(System.Func<System.Threading.Tasks.Task!>! action, System.TimeSpan? timeout = null) -> System.Threading.Tasks.Task<(string? error, System.Exception? exception)>!
Ignitor.BlazorClient.ExpectDisconnect(System.Func<System.Threading.Tasks.Task!>! action, System.TimeSpan? timeout = null) -> System.Threading.Tasks.Task<System.Exception?>!
Ignitor.BlazorClient.ExpectDotNetInterop(System.Func<System.Threading.Tasks.Task!>! action, System.TimeSpan? timeout = null) -> System.Threading.Tasks.Task<string?>!
Ignitor.BlazorClient.ExpectJSInterop(System.Func<System.Threading.Tasks.Task!>! action, System.TimeSpan? timeout = null) -> System.Threading.Tasks.Task<Ignitor.CapturedJSInteropCall?>!
Ignitor.BlazorClient.ExpectRenderBatch(System.Func<System.Threading.Tasks.Task!>! action, System.TimeSpan? timeout = null) -> System.Threading.Tasks.Task<Ignitor.CapturedRenderBatch?>!
Ignitor.BlazorClient.FindElementById(string! id) -> Ignitor.ElementNode!
Ignitor.BlazorClient.FormatError.get -> System.Func<string!, System.Exception!>?
Ignitor.BlazorClient.FormatError.set -> void
Ignitor.BlazorClient.GetPrerenderDescriptors(System.Uri! uri) -> System.Threading.Tasks.Task<string!>!
Ignitor.BlazorClient.Hive.get -> Ignitor.ElementHive!
Ignitor.BlazorClient.HubConnection.get -> Microsoft.AspNetCore.SignalR.Client.HubConnection!
Ignitor.BlazorClient.ImplicitWait.get -> bool
Ignitor.BlazorClient.InvokeDotNetMethod(object! callId, string! assemblyName, string! methodIdentifier, object! dotNetObjectId, string! argsJson) -> System.Threading.Tasks.Task!
Ignitor.BlazorClient.JSInterop -> System.Action<Ignitor.CapturedJSInteropCall!>?
Ignitor.BlazorClient.LoggerProvider.get -> Microsoft.Extensions.Logging.ILoggerProvider!
Ignitor.BlazorClient.LoggerProvider.set -> void
Ignitor.BlazorClient.OnCircuitError -> System.Action<string!>?
Ignitor.BlazorClient.Operations.get -> Ignitor.Operations!
Ignitor.BlazorClient.PrepareForNextBatch(System.TimeSpan? timeout) -> System.Threading.Tasks.Task<Ignitor.CapturedRenderBatch?>!
Ignitor.BlazorClient.PrepareForNextCircuitError(System.TimeSpan? timeout) -> System.Threading.Tasks.Task<string?>!
Ignitor.BlazorClient.PrepareForNextDisconnect(System.TimeSpan? timeout) -> System.Threading.Tasks.Task<System.Exception?>!
Ignitor.BlazorClient.PrepareForNextDotNetInterop(System.TimeSpan? timeout) -> System.Threading.Tasks.Task<string?>!
Ignitor.BlazorClient.PrepareForNextJSInterop(System.TimeSpan? timeout) -> System.Threading.Tasks.Task<Ignitor.CapturedJSInteropCall?>!
Ignitor.BlazorClient.RenderBatchReceived -> System.Action<Ignitor.CapturedRenderBatch!>?
Ignitor.BlazorClient.SelectAsync(string! elementId, string! value) -> System.Threading.Tasks.Task!
Ignitor.CapturedAttachComponentCall
Ignitor.CapturedAttachComponentCall.ComponentId.get -> int
Ignitor.CapturedJSInteropCall
Ignitor.CapturedJSInteropCall.AsyncHandle.get -> int
Ignitor.CapturedJSInteropCall.ResultType.get -> int
Ignitor.CapturedJSInteropCall.TargetInstanceId.get -> long
Ignitor.CapturedRenderBatch
Ignitor.CapturedRenderBatch.Id.get -> int
Ignitor.ComponentNode
Ignitor.ComponentNode.ComponentId.get -> int
Ignitor.ComponentNode.ComponentNode(int componentId) -> void
Ignitor.ComponentState
Ignitor.ComponentState.Component.get -> Ignitor.IComponent?
Ignitor.ComponentState.ComponentId.get -> int
Ignitor.ComponentState.ComponentState(int componentId) -> void
Ignitor.ContainerNode
Ignitor.ContainerNode.Children.get -> System.Collections.Generic.IReadOnlyList<Ignitor.Node!>!
Ignitor.ContainerNode.ContainerNode() -> void
Ignitor.ContainerNode.CreateAndInsertComponent(int componentId, int childIndex) -> Ignitor.ComponentNode!
Ignitor.ContainerNode.CreateAndInsertContainer(int childIndex) -> Ignitor.ContainerNode!
Ignitor.ContainerNode.InsertLogicalChild(Ignitor.Node! child, int childIndex) -> void
Ignitor.ContainerNode.RemoveLogicalChild(int childIndex) -> void
Ignitor.ElementHive
Ignitor.ElementHive.Components.get -> System.Collections.Generic.Dictionary<int, Ignitor.ComponentNode!>!
Ignitor.ElementHive.ElementHive() -> void
Ignitor.ElementHive.SerializedValue.get -> string!
Ignitor.ElementHive.TryFindElementById(string! id, out Ignitor.ElementNode? element) -> bool
Ignitor.ElementHive.Update(Ignitor.RenderBatch batch) -> void
Ignitor.ElementNode
Ignitor.ElementNode.Attributes.get -> System.Collections.Generic.IReadOnlyDictionary<string!, object!>!
Ignitor.ElementNode.ClickAsync(Microsoft.AspNetCore.SignalR.Client.HubConnection! connection) -> System.Threading.Tasks.Task!
Ignitor.ElementNode.ElementEventDescriptor
Ignitor.ElementNode.ElementEventDescriptor.ElementEventDescriptor(string! eventName, ulong eventId) -> void
Ignitor.ElementNode.ElementEventDescriptor.EventId.get -> ulong
Ignitor.ElementNode.ElementEventDescriptor.EventName.get -> string!
Ignitor.ElementNode.ElementNode(string! tagName) -> void
Ignitor.ElementNode.Events.get -> System.Collections.Generic.IReadOnlyDictionary<string!, Ignitor.ElementNode.ElementEventDescriptor!>!
Ignitor.ElementNode.Properties.get -> System.Collections.Generic.IReadOnlyDictionary<string!, object!>!
Ignitor.ElementNode.RemoveAttribute(string! key) -> void
Ignitor.ElementNode.SetAttribute(string! key, object! value) -> void
Ignitor.ElementNode.SetEvent(string! eventName, Ignitor.ElementNode.ElementEventDescriptor! descriptor) -> void
Ignitor.ElementNode.SetProperty(string! key, object! value) -> void
Ignitor.ElementNode.TagName.get -> string!
Ignitor.ElementReference
Ignitor.Error
Ignitor.Error.Error() -> void
Ignitor.Error.Stack.get -> string?
Ignitor.Error.Stack.set -> void
Ignitor.IComponent
Ignitor.IgnitorMessagePackHubProtocol
Ignitor.IgnitorMessagePackHubProtocol.IgnitorMessagePackHubProtocol() -> void
Ignitor.MarkupNode
Ignitor.Node
Ignitor.Node.Node() -> void
Ignitor.Node.SerializedValue.get -> string!
Ignitor.Operations
Ignitor.Operations.AttachComponent.get -> System.Collections.Concurrent.ConcurrentQueue<Ignitor.CapturedAttachComponentCall>!
Ignitor.Operations.Batches.get -> System.Collections.Concurrent.ConcurrentQueue<Ignitor.CapturedRenderBatch!>!
Ignitor.Operations.DotNetCompletions.get -> System.Collections.Concurrent.ConcurrentQueue<string!>!
Ignitor.Operations.Errors.get -> System.Collections.Concurrent.ConcurrentQueue<string!>!
Ignitor.Operations.JSInteropCalls.get -> System.Collections.Concurrent.ConcurrentQueue<Ignitor.CapturedJSInteropCall!>!
Ignitor.Operations.Operations() -> void
Ignitor.RenderBatch
Ignitor.RenderBatch.DisposedComponentIDs.get -> Ignitor.ArrayRange<int>
Ignitor.RenderBatch.DisposedEventHandlerIDs.get -> Ignitor.ArrayRange<ulong>
Ignitor.RenderBatch.ReferenceFrames.get -> Ignitor.ArrayRange<Ignitor.RenderTreeFrame>
Ignitor.RenderBatch.UpdatedComponents.get -> Ignitor.ArrayRange<Ignitor.RenderTreeDiff>
Ignitor.RenderBatchReader
Ignitor.RenderTreeDiff
Ignitor.RenderTreeEdit
Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.PermutationListEnd = 10 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.PermutationListEntry = 9 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.PrependFrame = 1 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.RemoveAttribute = 4 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.RemoveFrame = 2 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.SetAttribute = 3 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.StepIn = 6 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.StepOut = 7 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.UpdateMarkup = 8 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeEditType.UpdateText = 5 -> Ignitor.RenderTreeEditType
Ignitor.RenderTreeFrame
Ignitor.RenderTreeFrame.AttributeEventHandlerId.get -> ulong
Ignitor.RenderTreeFrame.ComponentId.get -> int
Ignitor.RenderTreeFrame.ComponentReferenceCaptureParentFrameIndex.get -> int
Ignitor.RenderTreeFrame.ComponentSubtreeLength.get -> int
Ignitor.RenderTreeFrame.ElementSubtreeLength.get -> int
Ignitor.RenderTreeFrame.FrameType.get -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrame.RegionSubtreeLength.get -> int
Ignitor.RenderTreeFrame.Sequence.get -> int
Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.Attribute = 3 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.Component = 4 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.ComponentReferenceCapture = 7 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.Element = 1 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.ElementReferenceCapture = 6 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.Markup = 8 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.None = 0 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.Region = 5 -> Ignitor.RenderTreeFrameType
Ignitor.RenderTreeFrameType.Text = 2 -> Ignitor.RenderTreeFrameType
Ignitor.TextNode
readonly Ignitor.ArrayRange<T>.Count -> int
readonly Ignitor.RenderTreeDiff.ComponentId -> int
readonly Ignitor.RenderTreeDiff.Edits -> Ignitor.ArrayBuilderSegment<Ignitor.RenderTreeEdit>
readonly Ignitor.RenderTreeEdit.MoveToSiblingIndex -> int
readonly Ignitor.RenderTreeEdit.ReferenceFrameIndex -> int
readonly Ignitor.RenderTreeEdit.SiblingIndex -> int
readonly Ignitor.RenderTreeEdit.Type -> Ignitor.RenderTreeEditType
static Ignitor.RenderBatchReader.Read(System.ReadOnlySpan<byte> data) -> Ignitor.RenderBatch
virtual Ignitor.Node.Parent.get -> Ignitor.ContainerNode?
virtual Ignitor.Node.Parent.set -> void
~Ignitor.ArrayRange<T>.ArrayRange(T[] array, int count) -> void
~Ignitor.CapturedAttachComponentCall.CapturedAttachComponentCall(int componentId, string selector) -> void
~Ignitor.CapturedAttachComponentCall.Selector.get -> string
~Ignitor.CapturedJSInteropCall.ArgsJson.get -> string
~Ignitor.CapturedJSInteropCall.CapturedJSInteropCall(int asyncHandle, string identifier, string argsJson, int resultType, long targetInstanceId) -> void
~Ignitor.CapturedJSInteropCall.Identifier.get -> string
~Ignitor.CapturedRenderBatch.CapturedRenderBatch(int id, byte[] data) -> void
~Ignitor.CapturedRenderBatch.Data.get -> byte[]
~Ignitor.ElementReference.ElementReference(string id) -> void
~Ignitor.ElementReference.Id.get -> string
~Ignitor.MarkupNode.MarkupContent.get -> string
~Ignitor.MarkupNode.MarkupNode(string markupContent) -> void
~Ignitor.RenderTreeFrame.AttributeEventUpdatesAttributeName.get -> string
~Ignitor.RenderTreeFrame.AttributeName.get -> string
~Ignitor.RenderTreeFrame.AttributeValue.get -> object
~Ignitor.RenderTreeFrame.Component.get -> Ignitor.IComponent
~Ignitor.RenderTreeFrame.ComponentKey.get -> object
~Ignitor.RenderTreeFrame.ComponentReferenceCaptureAction.get -> System.Action<object>
~Ignitor.RenderTreeFrame.ComponentType.get -> System.Type
~Ignitor.RenderTreeFrame.ElementKey.get -> object
~Ignitor.RenderTreeFrame.ElementName.get -> string
~Ignitor.RenderTreeFrame.ElementReferenceCaptureAction.get -> System.Action<Ignitor.ElementReference>
~Ignitor.RenderTreeFrame.ElementReferenceCaptureId.get -> string
~Ignitor.RenderTreeFrame.MarkupContent.get -> string
~Ignitor.RenderTreeFrame.TextContent.get -> string
~Ignitor.TextNode.TextContent.get -> string
~Ignitor.TextNode.TextContent.set -> void
~Ignitor.TextNode.TextNode(string text) -> void
~override Ignitor.RenderTreeFrame.ToString() -> string
~readonly Ignitor.ArrayRange<T>.Array -> T[]
~readonly Ignitor.RenderTreeEdit.RemovedAttributeName -> string
